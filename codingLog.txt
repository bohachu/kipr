== 20200202 14:13 ==


== 20200202 12:49 ==
需要一個乾淨的測試環境，撰寫獨立小APP可以獨立測試，獨立執行，先從 upload widget 開始實驗

已經可以支援 ... 語法不會有錯誤訊息了
And adding ( analysis_options.yaml )

analyzer:
  enable-experiment:
    - spread-collections

 in your pubspec.yaml

environment:
  sdk: ">=2.6.0 <3.0.0"

== 20200201 22:25 ==
strShopUri 大致像是這樣 "http://localhost:49247/shop2_backend.html#/edit-product"

void main() {
  String str = "http://localhost:49247/shop2_backend.html#/edit-product";
  RegExp reg = new RegExp(r"shop([^\u0000]+)(_backend.html)");
  Iterable<Match> matches = reg.allMatches(str);
  for (Match m in matches) {
    print('group0: ${m.group(0)}');
    print('group1: ${m.group(1)}');
    print('group2: ${m.group(2)}');
  }
}
/*
group0: shop2_backend.html
group1: 2
group2: _backend.html
*/

已經可以按照不同 shop2.html 等等的字樣把商品分到不同商店顯示了
  bool isProductBelongsToThisShop(String strShopUri) {
    if(strShopUri==null) return false;
    RegExp reg = new RegExp(r"(shop[^\u0000]+)(_backend.html)");
    Iterable<Match> matches = reg.allMatches(strShopUri);
    for (Match m in matches) {
      String strShop = m.group(1);
      if (getCurrentUri().contains(strShop)) {
        print('products.dart/strShop:$strShop');
        return true;
      }
    }
    return false;
  }

== 20200201 19:21 ==
新增商品、更新商品、都已經可以寫入商家URI識別 strShopUri 是哪個商店新增的了。驗證過Firebase資料庫有東西。
Firebase Database可以即時更新顯示不用刷新瀏覽器就能看到更新情況，爆強
        body: json.encode({
          'title': product.title,
          'description': product.description,
          'imageUrl': product.imageUrl,
          'price': product.price,
          'creator': product.creator,
          'creatorId': userId,
          'strShopUri': getCurrentUri()
        }),

==20200201 18:54==
. 已經可以針對URI判斷是否顯示後臺商品上架功能

~~ app_drawer.dart 判斷是不是後台有 _backend 字樣的 URL
  bool isBackend() {
    //print('app_drawer.dart/isBackend:${getCurrentUri()}');
    //app_drawer.dart/isBackend:http://localhost:49247/shop1.html#/user-products
    if(getCurrentUri().contains('_backend')) return true;
    return false;
  }

~~ app_drawer.dart 可以動態隱藏後臺上架商品的選單，用Row()空空的取代原本的選單項目位置
          isBackend() ? Divider() : Row(),
          isBackend()
              ? ListTile(
                  leading: Icon(Icons.edit),
                  title: Text(i('Manage Products')),
                  onTap: () {
                    Navigator.of(context)
                        .pushReplacementNamed(UserProductsScreen.routeName);
                  },
                )
              : Row(),

~~ uri.dart 從JavaScript抓取目前網址列字串
import 'dart:js' as js;
String getCurrentUri(){
  return js.context['location']['href'];
}

==20200131 21:57==
. 修改了 configKipr.dart
const String strFirebaseUrl='https://flutter-update-53be7.firebaseio.com/';
const String strFirebaseApiKey='AIzaSyBPDAUkwtg8MxVbFeo5YVQ_U1E7vZnS6WE';
. 納入 i18nKipr.dart 可以用在中文化
